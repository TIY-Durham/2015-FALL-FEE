.grid.row {
    // FIXME: Need a "clearfix hack" here!

    [class*="col-"] {
      box-sizing: border-box;
      outline: 1px solid #353461;
      display:block; float:left;
      padding-right: 1em;

      // No gutter on the last element, please!
      &:last-child {
        padding-right: 0;
      }

      // Just so we can see the things...
      span { // Can't we do better?
        display: block;
        background-color: gray;
      }
      body.demo &::before { // MUCH BETTER!
        display: block;
        background-color: lightgray;
      }
    } // END [class*="col-"]

    // For `.col-1-2` and `.col-2-2`... Not so bad.
    .col-1-2 {
      width: 100% * (1/2);
    }
    .col-2-2 {
      width: 100% * (2/2);
    }

    // This could start to get tedious, though...
    // .col-1-3 {
    //   width: 100% * (1/2);
    // }
    // .col-2-3 {
    //   width: 100% * (2/2);
    // }
    // .col-3-3 {
    //   width: 100% * (3/3);
    // }

    // Just copy-pasta, right? WRONG.
    // .col-1-4 {
    //   width: 100% * (1/4);
    // }
    // .col-2-4 {
    //   width: 100% * (2/4);
    // }
    // .col-3-4 {
    //   width: 100% * (3/4);
    // }
    // .col-4-4 {
    //   width: 100% * (4/4);
    // }

    // To get `.col-1-3`, `.col-2-3`, and `.col-3-3`...
    @for $X from 1 through 3 {
      .col-#{$X}-3 {
        width: 100% * ($X / 3);
      }
    } // END for 1..3

    // To get `.col-1-4`, `.col-2-4`, etc. is much easier...
    @for $X from 1 through 4 {
      .col-#{$X}-4 {
        width: 100% * ($X / 4);
      }
    } // END for 1..4

    $Y: 5; // For any arbitrary value of $Y, really, so why not 5?
    @for $X from 1 through $Y {
      .col-#{$X}-#{$Y} {
        width: 100% * ($X / $Y);

        body.demo &::before {
          content: "#{$X}/#{$Y}";
        }
      }
      .pad-#{$X}-#{$Y} {
        margin-left: 100% * ($X/$Y);
      }
    } // END @for 1...$Y

    // for 6 and 8 and 12 and 16 and 18
    @each $Y in 6, 8, 12, 16, 18 {
      @for $X from 1 through $Y {
        .col-#{$X}-#{$Y} {
          width: 100% * ($X / $Y);

          body.demo &::before {
            content: "#{$X}/#{$Y}";
          }
        }
        .pad-#{$X}-#{$Y} {
          margin-left: 100% * ($X/$Y);
        }
      } // END @for 1...$Y
    } // END @each 6,8,12,16,18
  } // END .grid.row
